"""
Строки-строка это последовательность символом, вкл. пробел, знаки припенания, цифры и т.д.
str - это оператор присваивания в строку
основные операции со строками: 
1.конкатенация - это операция присоединения символов или их наборов, которая выполнятеся с помощью оператора +. Присоединение возможно 
только между 
строками
2. Дублирование или повторение - это операция многократной конкатенации строки самой собой, которая выполняется с помощью оператора *
дублирование возможна только в том случае если операция выполняется между строкой и целым числом
3.доступ к элементу строки по индексу - любая строка представима в виде последовательности, у каждого элемента есть свой индекс
чтобы обратиться к элементу строки по индексу необходимо записать имя переменной, содержащюю строку, а после в [] указать индекс элемента в строке
    Индексы элементов строки слева направо с нуля, а если наоборот, то с -1
4.срезы строк - у метода извлечения среза строки, есть 3 аргумента: 
1. равен нулю
2. равен длине строки
3. равен единице
str. find - это метод который находит в строке указанную подстроку и возвращает индекс первого вхождения искомой подстроки (и в случае если
данная подстрока отсутствует возвращает минус 1)
str.replace это метод который используется для замены одной подстроки на другую 
str.count метод который подсчитывает кол вхождений в строку подстроки
есть еще split позволяет разбить строку по пробелам в рез получается список слов, если польз. вводит в одной строке ряд слов или чисел, то
каждая из них в программе обрабатывается отдельно
метод join он формирует из списка строку, т.е здесь наоборот

Списки
Списки служат для того, чтобы хранить объекты в определенном порядке, особенно если порядок или содержимое могут изменяться. В отличие от строк список
можно изменить. Вы можете изменить список, добавить в него новые элементы,
а также удалить или перезаписать существующие. Одно и то же значение может
встречаться в списке несколько раз.
один из способов создания списка в коде это прямое перечисление элементов списка и присваение его конкретной переменной
составить программу без len для подсчета кол : 
1. вводимых с клавы чисел через пробел
2. неположительных чисел среди вводимых с клавиатуры  через запятую
3. положительных чисел кратных числу 3 среди вводимых с клавы через запятую
"""
# """Списки-list"""
# students = ['Mairambek','Malika','Sultan','Tilek', 'Elizabet']
# students_2 = ['Fatima','Yrysbek','Erlan',]
# students_copy = students_2.copy()

# """добавление"""
# students.append('Mukhamed')
# students.insert(2,'Aigerim')
# students.extend(students_2)
# """изменение"""
# students[-1], students[0]=students[0], students[-1]
# students.sort()
# students[0] = 'Jazira'
# students[5:7]=['Hanzada','Syrga','Aidar']
# """удаление"""
# students.clear()
# students.remove('Aidar')
# deleted = students.pop(-2)
# del students[:3]
# print(f'{students=}')
# print(deleted)

# 1, 5-6
# 2, 5-6-8
# 3, 2
# 4, 16
# 5, 16
# 6, 16

""" лаб. работа №1 """
#задание №5
# name = str(input('Ваше имя?'))
# fav_subject = str(input('Ваш любимый предмет в школе?'))
# num_class = int(input('Ваш номер класса?'))
# print(f'Ваше имя: {name}'
#       f'Ваш любимый предмет в школе: {fav_subject}'
#       f'Вы учитесь в классе номер: {num_class}')

# #задание №6
# name = str(input('Ваше ФИО: '))
# hobbies = str(input('Ваше любимое хобби? '))
# print(f'Ваши имя, фамилия, отчество: {name}'
#       f'Ваше хобби: {hobbies}')

"""ЛАб работа №2"""
#задание №5
# numbers = [int(input("Введите число: "))
#         for _ in range(5)]

# positive_nums = [num for num in numbers if num > 0]
# even_positive_nums = [num for num in positive_nums if num % 2 == 0]

# if even_positive_nums:
#     result = min(even_positive_nums)
#     print(f'Наименьшее четное положительное число : {result}')
# else:
#     print('Нет четных положительных чисел.')

#задание №6
# season = input('Введите время года: ').lower()
# time_of_day = input('Введите сутки(утро, день, вечер, ночь): ').lower()

# if season == "зима" and "день" in time_of_day and 10 <= 7:
#     print('Светлое время суток!')
# elif season == "лето" and "ночь" not in time_of_day and (5 <= 22.5 or 0 <= 22.5 < 5):
#     print("Светлое время суток! ")
# elif season in ("весна", "осень") and 8 <= 20:
#     print("Светлое время суток!")
# else:
#     print('Темное время суток!')


# user_input = input("Введите числа через запятую: ")
# nums_list = [int(num)for num in user_input.split(',')]
# count_non_positive = 0

# for num in nums_list:
#     if num <= 0:
#         count_non_positive += 1

# print(f'Кол неположительных чисел : {count_non_positive}')


# user_input = input("Введите числа через запятую: ")
# nums_list = [int(num)for num in user_input.split(',')]
# count_positive_multiple_of_3 = 0

# for num in nums_list:
#     if num > 0 and num % 3 == 0:
#         count_positive_multiple_of_3 += 1

# print(f'Кол положительных чисел, кратных 3 : {count_positive_multiple_of_3}')






"""Напишите код программы, которая распределяет целые числа, введенные пользователем, на два списка:
1)четные и нечетные числа
2)положительные и отрицательные числа
3)числа, кратные 5, и все остальные
4)ненулевые числа, делящиеся на 3, но не делящиеся на 9, и числа, делящиеся на 3 и 9 одновременно. Числа не вошедшие ни в одну
  категорию, добавляются в дополнительный список
"""

# # инициализация списков 
# even_odd_nums = ([], []) #четные и нечетные
# positive_negative_nums = ([], []) #положительные и отрицательные 
# multiples_of_5_and_others = ([], []) #кратные 5 и все остальные
# special_nums = ([], []) #делящиеся на 3, 9, ненулевые

# add_list = [] #доп список

# user_input = input('Введите целые числа через запятую: ')
# nums_list = [int(num)for num in user_input.split(',')]

# for num in nums_list:
#     even_odd_nums[num % 2].append(num)

#     positive_negative_nums[num >= 0].append(num)

# multiples_of_5_and_others[num % 5 == 0].append(num)

# if num != 0:
#     if num % 3 == 0 and num % 9 != 0:
#         special_nums[0].append(num)
#     else:
#         add_list.append(num)

# print(f'Четные и нечетные числа: {even_odd_nums}')
# print(f'Положительные и отрицательные числа: {positive_negative_nums}')
# print(f'Числа, кратные 5, и все остальные: {multiples_of_5_and_others}')
# print(f'ненулевые числа, делящиеся на 3, но не делящиеся на 9, и числа, делящиеся на 3 и 9 одновременно: {special_nums}')